format_version: 5
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - BITRISE_STEP_ID: xcode-build-for-simulator
  - BITRISE_STEP_VERSION: 0.9.0
  - BITRISE_STEP_GIT_CLONE_URL: https://github.com/bitrise-steplib/steps-xcode-build-for-simulator.git
  - MY_STEPLIB_REPO_FORK_GIT_URL: $MY_STEPLIB_REPO_FORK_GIT_URL

  - ORIG_BITRISE_SOURCE_DIR: $BITRISE_SOURCE_DIR

workflows:
  test_objc:
    envs:
    - XCODEBUILD_OPTIONS:
    - SAMPLE_APP_URL: https://github.com/bitrise-io/sample-apps-ios-simple-objc.git
    - BRANCH: master
    - BITRISE_PROJECT_PATH: ios-simple-objc/ios-simple-objc.xcodeproj
    - BITRISE_SCHEME: ios-simple-objc
    - OUTPUT_TOOL: xcodebuild
    - SIMULATOR_OS_VERSION: "latest"
    - OUTPUT_DIR: $BITRISE_DEPLOY_DIR
    - BITRISE_EXPORTED_SIMULATOR_BUILDS_PATH_EXPECTED: $BITRISE_DEPLOY_DIR/ios-simple-objc.app
    - BITRISE_EXPORTED_SIMULATOR_BUILDS_PATH_MAP_EXPECTED: $BITRISE_DEPLOY_DIR/ios-simple-objc.app
    after_run:
    - _common

  test_xcode_8:
    steps:
    - change-workdir:
        title: Switch working dir to original dir
        run_if: true
        inputs:
        - path: "$ORIG_BITRISE_SOURCE_DIR"
        - is_create_path: true
    - go-list:
    - golint:
    - errcheck:
    - go-test:
    envs:
    - XCODEBUILD_OPTIONS:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/ios-xcode-8.0.git
    - COMMIT: "52ca16a9cead25be8c95c54e7fd53ce8fd945330"
    - BITRISE_PROJECT_PATH: ios-xcode-8.0/ios-xcode-8.0.xcodeproj
    - BITRISE_SCHEME: ios-xcode-8.0
    - OUTPUT_TOOL: xcpretty
    - SIMULATOR_OS_VERSION: latest
    - OUTPUT_DIR: $BITRISE_DEPLOY_DIR
    - BITRISE_EXPORTED_SIMULATOR_BUILDS_PATH_EXPECTED: $BITRISE_DEPLOY_DIR/ios-xcode-8.0.app
    - BITRISE_EXPORTED_SIMULATOR_BUILDS_PATH_MAP_EXPECTED: $BITRISE_DEPLOY_DIR/ios-xcode-8.0.app
    before_run:
    - test_objc
    after_run:
    - _common

  test_multi_target:
    before_run:
    # - test_xcode_8
    envs:
    - XCODEBUILD_OPTIONS:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-ios-multi-target.git
    - COMMIT: "ab36ed563bbc3125118e9f27df91474822dc0d46"
    - BITRISE_PROJECT_PATH: code-sign-test.xcodeproj
    - BITRISE_SCHEME: code-sign-test
    - SIMULATOR_OS_VERSION: "latest"
    - OUTPUT_TOOL: xcpretty
    - OUTPUT_DIR: $BITRISE_DEPLOY_DIR
    - BITRISE_EXPORTED_SIMULATOR_BUILDS_PATH_EXPECTED: "$BITRISE_DEPLOY_DIR/code-sign-test.app"
    - BITRISE_EXPORTED_SIMULATOR_BUILDS_PATH_MAP_EXPECTED: "$BITRISE_DEPLOY_DIR/code-sign-test.app|$BITRISE_DEPLOY_DIR/watchkit-app.app"
    after_run:
    - _common

  test_workspace:
    before_run:
    - test_multi_target
    envs:
    - XCODEBUILD_OPTIONS:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-ios-workspace-swift.git
    - BRANCH: master
    - BITRISE_PROJECT_PATH: sample-apps-ios-workspace-swift.xcworkspace
    - BITRISE_SCHEME: sample-apps-ios-workspace-swift
    - SIMULATOR_OS_VERSION: "latest"
    - OUTPUT_TOOL: xcpretty
    - OUTPUT_DIR: $BITRISE_DEPLOY_DIR
    - BITRISE_EXPORTED_SIMULATOR_BUILDS_PATH_EXPECTED: "$BITRISE_DEPLOY_DIR/sample-apps-ios-workspace-swift.app"
    - BITRISE_EXPORTED_SIMULATOR_BUILDS_PATH_MAP_EXPECTED: "$BITRISE_DEPLOY_DIR/sample-apps-ios-workspace-swift.app"
    after_run:
    - _common

  test_multi_target_workspace_custom_derived_data_path:
    envs:
    - XCODEBUILD_OPTIONS: "-derivedDataPath ./ddata"
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-ios-workspace-swift.git
    - BRANCH: watch
    - BITRISE_PROJECT_PATH: sample-apps-ios-workspace-swift.xcworkspace
    - BITRISE_SCHEME: sample-apps-ios-workspace-swift
    - SIMULATOR_OS_VERSION: "11.4"
    - OUTPUT_TOOL: xcodebuild
    - OUTPUT_DIR: $BITRISE_DEPLOY_DIR
    - BITRISE_EXPORTED_SIMULATOR_BUILDS_PATH_EXPECTED: "$BITRISE_SOURCE_DIR/ddata/sample-apps-ios-workspace-swift.app"
    - BITRISE_EXPORTED_SIMULATOR_BUILDS_PATH_MAP_EXPECTED: "$BITRISE_SOURCE_DIR/ddata/sample-apps-ios-workspace-swift.app|$BITRISE_SOURCE_DIR/ddata/bitfall.sample-apps-ios-workspace-swift-watch.app"
    after_run:
    - _common
    - test_multi_target_workspace

  test_multi_target_workspace:
    before_run:
    - test_workspace
    envs:
    - XCODEBUILD_OPTIONS:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-ios-workspace-swift.git
    - BRANCH: watch
    - BITRISE_PROJECT_PATH: sample-apps-ios-workspace-swift.xcworkspace
    - BITRISE_SCHEME: sample-apps-ios-workspace-swift
    - SIMULATOR_OS_VERSION: "11.4"
    - OUTPUT_TOOL: xcpretty
    - OUTPUT_DIR: $BITRISE_DEPLOY_DIR
    - BITRISE_EXPORTED_SIMULATOR_BUILDS_PATH_EXPECTED: "$BITRISE_DEPLOY_DIR/sample-apps-ios-workspace-swift.app"
    - BITRISE_EXPORTED_SIMULATOR_BUILDS_PATH_MAP_EXPECTED: "$BITRISE_DEPLOY_DIR/sample-apps-ios-workspace-swift.app|$BITRISE_DEPLOY_DIR/bitfall.sample-apps-ios-workspace-swift-watch.app"
    after_run:
    - _common

  _common:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            rm -rf "$ORIG_BITRISE_SOURCE_DIR/_tmp"
            mkdir -p "$ORIG_BITRISE_SOURCE_DIR/_tmp"
    - change-workdir:
        title: Switch working dir to _tmp dir
        run_if: true
        inputs:
        - path: "$ORIG_BITRISE_SOURCE_DIR/_tmp"
        - is_create_path: true
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash

            if [[ -z "${SAMPLE_APP_URL}" ]]; then
              echo "error: there is no SAMPLE_APP_URL env var specified"
              exit 1
            elif [[ -z "${COMMIT}" && -z "${BRANCH}" ]]; then
              echo "error: can't checkout: there is no BRANCH or COMMIT env var specified"
              exit 1
            fi

            git init
            git remote add origin "${SAMPLE_APP_URL}"
            git fetch || exit 1
            [[ -n "${COMMIT}" ]] && git checkout "${COMMIT}" || git checkout "${BRANCH}"
            
    - certificate-and-profile-installer:
    - path::./:
        inputs:
        - simulator_os_version: $SIMULATOR_OS_VERSION
        - output_tool: $OUTPUT_TOOL
          opts:
            is_expand: "true"
        - xcodebuild_options: $XCODEBUILD_OPTIONS
        - verbose_log: "no"
    - script:
        title: Output check
        inputs:
        - content: |-
            #!/bin/bash
            set -e

            if [ -z ${BITRISE_EXPORTED_SIMULATOR_BUILDS_PATH_EXPECTED} ] ; then
              echo BITRISE_EXPORTED_SIMULATOR_BUILDS_PATH_EXPECTED is empty  
            else 
              if [ -z ${BITRISE_APP_DIR_PATH+x} ] || [ ${BITRISE_APP_DIR_PATH+x} != ${BITRISE_EXPORTED_SIMULATOR_BUILDS_PATH_EXPECTED+x} ] ; then
                echo "[!] Missing Exported Artifact: should have: $BITRISE_EXPORTED_SIMULATOR_BUILDS_PATH_EXPECTED and have: $BITRISE_APP_DIR_PATH"
                exit 1
              else
                echo "BITRISE_APP_DIR_PATH -> $BITRISE_APP_DIR_PATH"
              fi
            fi

            if [ -z ${BITRISE_EXPORTED_SIMULATOR_BUILDS_PATH_MAP_EXPECTED} ] ; then
              echo BITRISE_EXPORTED_SIMULATOR_BUILDS_PATH_MAP_EXPECTED is empty  
            else 
              if [ -z ${BITRISE_APP_DIR_PATH_LIST+x} ] || [ ${BITRISE_APP_DIR_PATH_LIST+x} != ${BITRISE_EXPORTED_SIMULATOR_BUILDS_PATH_MAP_EXPECTED+x} ] ; then
                echo "[!] Missing Exported Artifact: should have: $BITRISE_EXPORTED_SIMULATOR_BUILDS_PATH_MAP_EXPECTED and have: $BITRISE_APP_DIR_PATH_LIST"
                exit 1
              else
                echo "BITRISE_APP_DIR_PATH_LIST -> $BITRISE_APP_DIR_PATH_LIST"
              fi
            fi

  # ----------------------------------------------------------------
  # --- Utility workflows

  dep-update:
    title: Dep update
    description: |
      Used for updating bitrise dependencies with dep
    steps:
    - script:
        title: Dependency update
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            go get -u -v github.com/golang/dep/cmd/dep
            dep ensure -v
            dep ensure -v -update
            
  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml
